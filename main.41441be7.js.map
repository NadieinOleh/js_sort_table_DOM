{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tbody","tBodies","sortedRows","rows","sortTableString","cellNumber","sort","prev","current","prevString","cells","innerText","currentString","localeCompare","append","sortTableNumber","prevStr","currentStr","prevNum","toNumber","string","numb","replace","tHead","addEventListener","e","target","cellIndex"],"mappings":";AAAA,aAwDC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAtDD,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAQH,EAAMI,QAAQ,GACxBC,EAAiBF,EAAAA,EAAMG,MAE3B,SAASC,EAAgBC,GACvBH,EAAa,EAAIF,EAAMG,MAAMG,KAAK,SAACC,EAAMC,GACjCC,IAAAA,EAAaF,EAAKG,MAAML,GAAYM,UACpCC,EAAgBJ,EAAQE,MAAML,GAAYM,UAEzCF,OAAAA,EAAWI,cAAcD,KAGlCZ,EAAMc,OAANd,MAAAA,EAAgBE,EAAAA,IAGlB,SAASa,EAAgBV,GACvBH,EAAa,EAAIF,EAAMG,MAAMG,KAAK,SAACU,EAASC,GAInCC,OAHSC,EAASH,EAAQN,MAAML,GAAYM,WAChCQ,EAASF,EAAWP,MAAML,GAAYM,aAK3DX,EAAMc,OAANd,MAAAA,EAAgBE,EAAAA,IA2BlB,SAASiB,EAASC,GAGTC,OAFOD,EAAOE,QAAQ,MAAO,IAzBtCzB,EAAM0B,MAAMC,iBAAiB,QAAS,SAACC,GAC7B,QAAA,GACAA,KAAuB,IAAvBA,EAAEC,OAAOC,UAGb,YAFAvB,EAAgB,GAIZqB,KAAuB,IAAvBA,EAAEC,OAAOC,UAGb,YAFAvB,EAAgB,GAIZqB,KAAuB,IAAvBA,EAAEC,OAAOC,UAGb,YAFAZ,EAAgB,GAIZU,KAAuB,IAAvBA,EAAEC,OAAOC,UACbZ,EAAgB,GAEhBf,EAAMc,OAANd,MAAAA,EAAgBE,EAAAA","file":"main.41441be7.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tbody = table.tBodies[0];\nlet sortedRows = [...tbody.rows];\n\nfunction sortTableString(cellNumber) {\n  sortedRows = [...tbody.rows].sort((prev, current) => {\n    const prevString = prev.cells[cellNumber].innerText;\n    const currentString = current.cells[cellNumber].innerText;\n\n    return prevString.localeCompare(currentString);\n  });\n\n  tbody.append(...sortedRows);\n}\n\nfunction sortTableNumber(cellNumber) {\n  sortedRows = [...tbody.rows].sort((prevStr, currentStr) => {\n    const prevNum = toNumber(prevStr.cells[cellNumber].innerText);\n    const currentNum = toNumber(currentStr.cells[cellNumber].innerText);\n\n    return prevNum - currentNum;\n  });\n\n  tbody.append(...sortedRows);\n}\n\ntable.tHead.addEventListener('click', (e) => {\n  switch (true) {\n    case (e.target.cellIndex === 0):\n      sortTableString(0);\n\n      return;\n\n    case (e.target.cellIndex === 1):\n      sortTableString(1);\n\n      return;\n\n    case (e.target.cellIndex === 2):\n      sortTableNumber(2);\n\n      return;\n\n    case (e.target.cellIndex === 3):\n      sortTableNumber(3);\n\n      tbody.append(...sortedRows);\n  }\n});\n\nfunction toNumber(string) {\n  const numb = +string.replace(/\\D/g, '');\n\n  return numb;\n}\n"]}